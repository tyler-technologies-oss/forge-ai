import{r as C,i as $,x as a,E as S}from"./iframe-CsFrBjI9.js";import{t as M}from"./custom-element-C028faeO.js";import{r as z}from"./state-BSBy8XQz.js";import{n as T}from"./query-assigned-nodes-cwDSNLIu.js";import{n as W}from"./when-3fO0zp9C.js";import"./ai-empty-state-Z_czqoTS.js";import"./ai-gradient-container-D1IVowGq.js";const A=`/**
 * @license
 * Copyright Tyler Technologies, Inc. 
 * License: Apache-2.0
 */:host{display:block;height:100%;flex-grow:1}.ai-chat-interface{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--forge-typography-body1-font-family, var(--forge-typography-font-family, "Roboto", sans-serif));font-size:var(--forge-typography-body1-font-size, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-font-size-scale, .875)));font-weight:var(--forge-typography-body1-font-weight, 400);line-height:var(--forge-typography-body1-line-height, calc(var(--forge-typography-font-size, 1rem) * var(--forge-typography-body-line-height-scale, 1.125)));letter-spacing:var(--forge-typography-body1-letter-spacing, .0357142857em);text-transform:var(--forge-typography-body1-text-transform, inherit);text-decoration:var(--forge-typography-body1-text-decoration, inherit);color:var(--forge-theme-on-surface, #000000);display:flex;flex-direction:column;height:100%}.messages-container::-webkit-scrollbar{height:var(--forge-scrollbar-height, 16px);width:var(--forge-scrollbar-width, 16px)}.messages-container::-webkit-scrollbar-track{background-color:var(--forge-scrollbar-track-container, var(--forge-theme-surface-container-low, #ebebeb))}.messages-container::-webkit-scrollbar-track:hover{background-color:var(--forge-scrollbar-track-container-hover, var(--forge-theme-surface-container-low, #ebebeb))}.messages-container::-webkit-scrollbar-corner{background-color:var(--forge-scrollbar-track-container, var(--forge-theme-surface-container-low, #ebebeb))}.messages-container::-webkit-scrollbar-thumb{height:var(--forge-scrollbar-thumb-min-height, 32px);width:var(--forge-scrollbar-thumb-min-width, 32px);border-radius:var(--forge-scrollbar-border-radius, calc(var(--forge-shape-full, 9999px) * var(--forge-shape-factor, 1)));border-width:var(--forge-scrollbar-border-width, 3px);border-style:solid;border-color:transparent;background-color:var(--forge-scrollbar-thumb-container, var(--forge-theme-surface-container-medium, #c2c2c2));background-clip:content-box}.messages-container::-webkit-scrollbar-thumb:hover{background-color:var(--forge-scrollbar-thumb-container-hover, var(--forge-theme-surface-container-high, #9e9e9e))}.messages-container{padding-inline:var(--forge-spacing-medium, 16px);padding-block-end:var(--forge-spacing-medium, 16px);overflow-y:auto}@media not all and (min-resolution: .001dpcm){@supports (-webkit-appearance: none){.messages-container{overflow-y:scroll}}}.messages-container{background:linear-gradient(to top,var(--forge-theme-primary-container-minimum, #f7f8fc),var(--forge-theme-surface, #ffffff));border-block-end:1px solid var(--forge-theme-outline, #e0e0e0);display:flex;flex-direction:column;flex-grow:1;gap:var(--forge-spacing-medium, 16px)}.suggestions-container{padding-inline:var(--forge-spacing-medium, 16px);padding-block-start:var(--forge-spacing-medium, 16px)}.prompt-container{padding:var(--forge-spacing-medium, 16px)}`;var E=Object.defineProperty,I=Object.getOwnPropertyDescriptor,y=e=>{throw TypeError(e)},v=(e,r,o,i)=>{for(var n=i>1?void 0:i?I(r,o):r,p=e.length-1,d;p>=0;p--)(d=e[p])&&(n=(i?d(r,o,n):d(n))||n);return i&&n&&E(r,o,n),n},w=(e,r,o)=>r.has(e)||y("Cannot "+o),s=(e,r,o)=>(w(e,r,"read from private field"),o?o.call(e):r.get(e)),c=(e,r,o)=>r.has(e)?y("Cannot add the same private member more than once"):r instanceof WeakSet?r.add(e):r.set(e,o),h=(e,r,o)=>(w(e,r,"access private method"),o),m,f,t,_,u,x,b,k,g;const N="forge-ai-chat-interface";let l=class extends ${constructor(){super(...arguments),c(this,t),this._hasMessages=!1,c(this,m,a`<slot name="header" @slotchange=${h(this,t,g)}></slot>`),c(this,f,a`<slot name="suggestions" @slotchange=${h(this,t,g)}></slot>`),c(this,u,a`<slot name="prompt" @slotchange=${h(this,t,g)}></slot>`),c(this,b,a`<slot @slotchange=${h(this,t,g)}></slot>`)}scrollToBottom(){const e=this.shadowRoot?.querySelector(".messages-container");e&&e.scrollTo({top:e.scrollHeight,behavior:"smooth"})}render(){return a`
      <div class="ai-chat-interface">
        ${s(this,m)} ${s(this,t,k)} ${s(this,t,_)}
        <div class="prompt-container">${s(this,t,x)}</div>
      </div>
    `}};m=new WeakMap;f=new WeakMap;t=new WeakSet;_=function(){const e=this._slottedSuggestionsNodes.length>0;return W(e,()=>a`<div class="suggestions-container">${s(this,f)}</div>`,()=>s(this,f))};u=new WeakMap;x=function(){return s(this,u)};b=new WeakMap;k=function(){return a`
      <div class="messages-container" part="messages">
        ${s(this,b)} ${this._hasMessages?S:a`<forge-ai-empty-state></forge-ai-empty-state>`}
      </div>
    `};g=function(e){const r=e.target.name||"default";if(r==="default"){const i=e.target.assignedElements();this._hasMessages=i.length>0}["header","suggestions","prompt","default"].includes(r)&&this.requestUpdate()};l.styles=C(A);v([T({slot:"suggestions",flatten:!0})],l.prototype,"_slottedSuggestionsNodes",2);v([z()],l.prototype,"_hasMessages",2);l=v([M(N)],l);
